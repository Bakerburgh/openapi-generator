---
swagger: "2.0"
info:
  description: |
    "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io(http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache-2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/v2"
tags:
  - name: "test"
    description: "testing paths and definitions"
schemes:
  - "http"
paths:
  /test:
    post:
      tags:
        - "test"
      summary: "Runs Swagger Post tests"
      description: "Ensures that swaggerRouter POST Messages performs as expected"
      operationId: "confirmRoutePost"
      produces:
        - "application/json"
      parameters:
        - name: "testObject"
          in: "body"
          schema:
            type: "object"
            required:
              - firstName
            properties:
              firstName:
                type: "string"
              lastName:
                type: "string"
          required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
      x-swagger-router-controller: "Test"
    get:
      tags:
        - "test"
      summary: "get all test items"
      description: "Testing routing reaching controller and retrieving list of items"
      operationId: "confirmRouteGetMany"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/testItem"
      x-swagger-router-controller: "Test"
  /test/{pathRequiredNumber}:
    get:
      tags:
        - "test"
      summary: "Runs Swagger tests"
      description: "Ensures that swaggerRouter performs as expected"
      operationId: "confirmRouteGetSingle"
      produces:
        - "application/json"
      parameters:
        - name: "pathRequiredNumber"
          in: "path"
          type: "number"
          required: true
        - name: "queryOptionalNumber"
          in: "query"
          type: "number"
          required: false
          default: 1
        - name: "queryRequiredString"
          in: "query"
          type: "string"
          required: true
        - name: "headerOptionalBool"
          in: "header"
          type: "boolean"
          required: false
          default: false
        - name: "headerRequiredArray"
          in: "header"
          type: "array"
          items:
            type: "number"
          required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
      x-swagger-router-controller: "Test"
    put:
      tags:
        - "test"
      summary: "Runs Swagger Post tests"
      description: "Ensures that swaggerRouter POST Messages performs as expected"
      operationId: "confirmRoutePut"
      consumes:
        - multipart/form-data
      produces:
        - "application/json"
      parameters:
        - name: "pathRequiredNumber"
          in: "path"
          type: "number"
          required: true
        - name: "firstName"
          in: "formData"
          type: "string"
        - name: "lastName"
          in: "formData"
          type: "string"
        - name: "image"
          in: "formData"
          type: "file"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
      x-swagger-router-controller: "Test"
  /test/controller:
    get:
      tags:
        - "test"
      summary: "test routing for get request, returning array"
      operationId:  "testGetController"
      responses:
        200:
          description: "successful response"
          schema:
            type: array
            items:
              $ref: "#/definitions/testItem"
      x-swagger-router-controller: "Test"
    post:
      tags:
        - "test"
      summary: "test routing for post request, returning the item sent with id"
      operationId:  "testPostController"
      parameters:
        - name: "testItem"
          in: "body"
          schema:
            $ref: "#/definitions/testItem"
      responses:
        200:
          description: "successful response"
          schema:
            type: array
            items:
              $ref: "#/definitions/testItem"
      x-swagger-router-controller: "Test"
  /test/controller/{itemId}:
    get:
      tags:
        - "test"
      summary: "test routing for get request, returning single item"
      operationId:  "testFindByIdController"
      parameters:
        - name: "itemId"
          in: "path"
          type: "number"
          required: true
      responses:
        200:
          description: "successful response"
          schema:
            $ref: "#/definitions/testItem"
      x-swagger-router-controller: "Test"
    put:
      tags:
        - "test"
      summary: "test routing for put (update) request, returning the item sent after update"
      operationId:  "testPutController"
      parameters:
        - name: "itemId"
          in: "path"
          type: "number"
          required: true
        - name: "testItem"
          in: "body"
          schema:
            $ref: "#/definitions/testItem"
      responses:
        200:
          description: "item updated"
          schema:
            $ref: "#/definitions/testItem"
      x-swagger-router-controller: "Test"
    delete:
      tags:
        - "test"
      summary: "test routing for delete request, returning message about item deleted"
      operationId:  "testDeleteController"
      parameters:
        - name: "itemId"
          in: "path"
          type: "number"
          required: true
      responses:
        200:
          description: "successful response"
          schema:
            type: "string"
      x-swagger-router-controller: "Test"

securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/api/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  testItem:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      descrtiption:
        type: string
      version:
        type: number
    example:
      id: 1
      name: "testItem"
      description: "An item which means very little, as it's only a test"
      version: 2.3
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
